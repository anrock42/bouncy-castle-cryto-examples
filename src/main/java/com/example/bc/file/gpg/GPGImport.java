package com.example.bc.file.gpg;

import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.bouncycastle.openpgp.*;
import org.bouncycastle.openpgp.jcajce.JcaPGPObjectFactory;
import org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder;
import org.bouncycastle.openpgp.operator.jcajce.JcePBEDataDecryptorFactoryBuilder;
import org.bouncycastle.util.io.Streams;

import java.io.*;
import java.security.NoSuchProviderException;
import java.security.Security;

/**
 * Stolen from: https://github.com/bcgit/bc-java/blob/master/pg/src/main/java/org/bouncycastle/openpgp/examples/PBEFileProcessor.java
 */
public class GPGImport {

    public static void main(String[] args) throws IOException, NoSuchProviderException, PGPException {
        if (args.length != 2) {
            System.out.println("Missing argument: <INPUT_FILE> <PASSWORD>");
            return;
        }

        Security.addProvider(new BouncyCastleProvider());

        InputStream in = new BufferedInputStream(new FileInputStream(args[0]));
        decryptFile(in, args[1].toCharArray());
        in.close();
    }

    private static void decryptFile(InputStream in, char[] passPhrase) throws IOException, PGPException {
        in = PGPUtil.getDecoderStream(in);

        JcaPGPObjectFactory pgpF = new JcaPGPObjectFactory(in);
        PGPEncryptedDataList enc;
        Object o = pgpF.nextObject();

        //
        // the first object might be a PGP marker packet.
        //
        if (o instanceof PGPEncryptedDataList) {
            enc = (PGPEncryptedDataList) o;
        } else {
            enc = (PGPEncryptedDataList) pgpF.nextObject();
        }

        PGPPBEEncryptedData pbe = (PGPPBEEncryptedData) enc.get(0);

        InputStream clear = pbe.getDataStream(
                new JcePBEDataDecryptorFactoryBuilder(
                        new JcaPGPDigestCalculatorProviderBuilder()
                                .setProvider("BC")
                                .build()
                ).setProvider("BC").build(passPhrase));

        JcaPGPObjectFactory pgpFact = new JcaPGPObjectFactory(clear);

        //
        // if we're trying to read a file generated by someone other than us
        // the data might not be compressed, so we check the return type from
        // the factory and behave accordingly.
        //
        o = pgpFact.nextObject();
        if (o instanceof PGPCompressedData) {
            PGPCompressedData cData = (PGPCompressedData) o;

            pgpFact = new JcaPGPObjectFactory(cData.getDataStream());

            o = pgpFact.nextObject();
        }

        PGPLiteralData ld = (PGPLiteralData) o;
        InputStream unc = ld.getInputStream();

        OutputStream fOut = new BufferedOutputStream(new FileOutputStream(ld.getFileName()));

        Streams.pipeAll(unc, fOut);

        fOut.close();

        if (!pbe.verify()) {
            System.err.println("message failed integrity check");
        } else {
            System.err.println("message integrity check passed");
        }
    }
}
